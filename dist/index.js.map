{"version":3,"sources":["../index.js"],"names":["contexts","stateful","render","StatefulComponent","type","hookContext","index","hooks","hook","length","Error","factory","inputs","some","input","value","reducer","initialState","onChange","state","setState","dispatch","args","ref","useHook","setter","current","defaultValue","nextValue","forceUpdate","use","effect","memoize","onMount","dispose","memo","context","contextName","shift","Consumer","Provider","children","handler","mount","didMountHandlers","push","forEach","props","PureComponent","displayName","name"],"mappings":";;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,QAAQ,GAAG,EAAjB;;AAEO,SAASC,QAAT,CAAkBC,OAAlB,EAA0B;AAAA,MACzBC,iBADyB;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,iGAEV,EAFU;;AAAA,wFAInB,UAAAC,IAAI,EAAI;AAAA;AAAA,YACRC,WADQ,yBACRA,WADQ;;AAAA,YAERC,KAFQ,GAESD,WAFT,CAERC,KAFQ;AAAA,YAEDC,KAFC,GAESF,WAFT,CAEDE,KAFC,EAGhB;;AACA,YAAMC,IAAI,GACRD,KAAK,CAACD,KAAD,CAAL,KACCC,KAAK,CAACD,KAAD,CAAL,GAAe;AACdF,UAAAA,IAAI,EAAJA,IADc;AAEdE,UAAAA,KAAK,EAAEC,KAAK,CAACE;AAFC,SADhB,CADF;;AAMA,YAAIL,IAAI,KAAKI,IAAI,CAACJ,IAAlB,EAAwB;AACtB,gBAAM,IAAIM,KAAJ,CAAU,oBAAV,CAAN;AACD;;AACDL,QAAAA,WAAW,CAACC,KAAZ;AACA,eAAOE,IAAP;AACD,OAnB4B;;AAAA,wFAqBnB,UAACA,IAAD,EAAOG,OAAP,EAAgC;AAAA,YAAhBC,MAAgB,uEAAP,EAAO;;AACxC,YACE,CAACJ,IAAI,CAACI,MAAN,IACAJ,IAAI,CAACI,MAAL,CAAYC,IAAZ,CAAiB,UAACC,KAAD,EAAQR,KAAR;AAAA,iBAAkBQ,KAAK,KAAKF,MAAM,CAACN,KAAD,CAAlC;AAAA,SAAjB,CAFF,EAGE;AACAE,UAAAA,IAAI,CAACO,KAAL,GAAaJ,OAAO,MAAP,4BAAWC,MAAX,EAAb;AACAJ,UAAAA,IAAI,CAACI,MAAL,GAAcA,MAAd;AACD;;AACD,eAAOJ,IAAI,CAACO,KAAZ;AACD,OA9B4B;;AAAA,4FAgCf;AACZR,QAAAA,KAAK,EAAE,EADK;AAEZD,QAAAA,KAAK,EAAE,CAFK;AAIZU,QAAAA,OAAO,EAAE,iBAACA,QAAD,EAAUC,YAAV,EAAwBC,QAAxB,EAAqC;AAAA,sCAClB,MAAKb,WAAL,CAAiBc,KAAjB,CACxBF,YADwB,EAExBC,QAFwB,CADkB;AAAA;AAAA,cACrCC,KADqC;AAAA,cAC9BC,QAD8B;;AAM5C,mBAASC,QAAT,GAA2B;AAAA,+CAANC,IAAM;AAANA,cAAAA,IAAM;AAAA;;AACzBF,YAAAA,QAAQ,CAACJ,QAAO,MAAP,UAAQG,KAAR,SAAkBG,IAAlB,EAAD,CAAR;AACD;;AAED,iBAAO,CAACH,KAAD,EAAQE,QAAR,CAAP;AACD,SAfW;AAiBZE,QAAAA,GAAG,EAAE,eAAM;AACT,cAAMf,IAAI,GAAG,MAAKgB,OAAL,CAAa,KAAb,CAAb;;AACA,cAAI,CAAChB,IAAI,CAACiB,MAAV,EAAkB;AAChBjB,YAAAA,IAAI,CAACiB,MAAL,GAAc,UAAAV,KAAK;AAAA,qBAAKP,IAAI,CAACiB,MAAL,CAAYC,OAAZ,GAAsBX,KAA3B;AAAA,aAAnB;AACD;;AACD,iBAAOP,IAAI,CAACiB,MAAZ;AACD,SAvBW;AAyBZN,QAAAA,KAAK,EAAE,eAACQ,YAAD,EAAeT,QAAf,EAA4B;AACjC,cAAMV,IAAI,GAAG,MAAKgB,OAAL,CAAa,OAAb,CAAb;;AACA,cAAI,CAAChB,IAAI,CAACiB,MAAV,EAAkB;AAChBjB,YAAAA,IAAI,CAACO,KAAL,GAAaY,YAAb;;AACAnB,YAAAA,IAAI,CAACiB,MAAL,GAAc,UAAAG,SAAS,EAAI;AACzB,kBAAIA,SAAS,KAAKpB,IAAI,CAACO,KAAvB,EAA8B;AAC9BP,cAAAA,IAAI,CAACO,KAAL,GAAaa,SAAb;AACAV,cAAAA,QAAQ,IAAIA,QAAQ,CAACV,IAAI,CAACO,KAAN,CAApB,CAHyB,CAIzB;;AACA,oBAAKc,WAAL;AACD,aAND;AAOD;;AAED,iBAAO,CAACrB,IAAI,CAACO,KAAN,EAAaP,IAAI,CAACiB,MAAlB,CAAP;AACD,SAvCW;AAyCZK,QAAAA,GAAG,EAAE,aAACtB,IAAD;AAAA,6CAAUc,IAAV;AAAUA,YAAAA,IAAV;AAAA;;AAAA,iBAAmBd,IAAI,MAAJ,UAAK,MAAKH,WAAV,SAA0BiB,IAA1B,EAAnB;AAAA,SAzCO;AA2CZS,QAAAA,MAAM,EAAE,gBAACpB,OAAD,EAAUC,MAAV,EAAqB;AAC3B,cAAMJ,IAAI,GAAG,MAAKgB,OAAL,CAAa,QAAb,CAAb;;AACA,iBAAO,MAAKQ,OAAL,CACLxB,IADK,EAEL;AAAA,+CAAIc,IAAJ;AAAIA,cAAAA,IAAJ;AAAA;;AAAA,mBACE,MAAKW,OAAL,CAAa,YAAM;AACjBzB,cAAAA,IAAI,CAAC0B,OAAL,IAAgB1B,IAAI,CAAC0B,OAAL,EAAhB;AACA1B,cAAAA,IAAI,CAAC0B,OAAL,GAAevB,OAAO,MAAP,SAAWW,IAAX,CAAf;AACD,aAHD,CADF;AAAA,WAFK,EAOLV,MAPK,CAAP;AASD,SAtDW;AAwDZuB,QAAAA,IAAI,EAAE,cAACxB,OAAD,EAAUC,MAAV,EAAqB;AACzB,cAAMJ,IAAI,GAAG,MAAKgB,OAAL,CAAa,MAAb,CAAb;;AACA,iBAAO,MAAKQ,OAAL,CAAaxB,IAAb,EAAmBG,OAAnB,EAA4BC,MAA5B,CAAP;AACD,SA3DW;AA6DZwB,QAAAA,OAAO,EAAE,mBAAa;AACpB,cAAIC,WAAW,GAAG,SAAlB;;AADoB,6CAATf,IAAS;AAATA,YAAAA,IAAS;AAAA;;AAEpB,cAAI,OAAOA,IAAI,CAAC,CAAD,CAAX,KAAmB,QAAvB,EAAiC;AAC/Be,YAAAA,WAAW,GAAGf,IAAI,CAACgB,KAAL,EAAd;AACD;;AACD,cAAMF,OAAO,GACXpC,QAAQ,CAACqC,WAAD,CAAR,KAA0BrC,QAAQ,CAACqC,WAAD,CAAR,GAAwB,2BAAlD,CADF,CALoB,CAQpB;;AACA,cAAI,OAAOf,IAAI,CAAC,CAAD,CAAX,KAAmB,UAAvB,EAAmC;AACjC,mBAAO,0BAAcc,OAAO,CAACG,QAAtB,EAAgC,EAAhC,EAAoCjB,IAAI,CAAC,CAAD,CAAxC,CAAP;AACD;;AACD,iBAAO,0BAAcc,OAAO,CAACI,QAAtB,EAAgC;AACrCzB,YAAAA,KAAK,EAAEO,IAAI,CAAC,CAAD,CAD0B;AAErCmB,YAAAA,QAAQ,EAAEnB,IAAI,CAAC,CAAD;AAFuB,WAAhC,CAAP;AAID;AA7EW,OAhCe;;AAAA,wFAgHnB,UAAAoB,OAAO,EAAI;AACnB,YAAI,MAAKC,KAAT,EAAgB;AACdD,UAAAA,OAAO;AACR,SAFD,MAEO;AACL,gBAAKE,gBAAL,CAAsBC,IAAtB,CAA2BH,OAA3B;AACD;AACF,OAtH4B;;AAAA;AAAA;;AAAA;AAAA;AAAA,0CAwHT;AAClB,aAAKC,KAAL,GAAa,IAAb;AACA,aAAKC,gBAAL,CAAsBE,OAAtB,CAA8B,UAAAJ,OAAO;AAAA,iBAAIA,OAAO,EAAX;AAAA,SAArC;AACA,aAAKE,gBAAL,CAAsBnC,MAAtB,GAA+B,CAA/B;AACD;AA5H4B;AAAA;AAAA,6CA8HN;AACrB,aAAKkC,KAAL,GAAa,KAAb;AACA,aAAKtC,WAAL,CAAiBE,KAAjB,CAAuBuC,OAAvB,CAA+B,UAAAtC,IAAI,EAAI;AACrCA,UAAAA,IAAI,CAACJ,IAAL,KAAc,QAAd,IAA0BI,IAAI,CAAC0B,OAA/B,IAA0C1B,IAAI,CAAC0B,OAAL,EAA1C;AACD,SAFD;AAGD;AAnI4B;AAAA;AAAA,+BAqIpB;AAAA,YACCa,KADD,GACwB,IADxB,CACCA,KADD;AAAA,YACQ1C,WADR,GACwB,IADxB,CACQA,WADR,EAEP;;AACAA,QAAAA,WAAW,CAACC,KAAZ,GAAoB,CAApB;AACA,eAAOJ,OAAM,CAAC6C,KAAD,EAAQ1C,WAAR,CAAb;AACD;AA1I4B;;AAAA;AAAA,IACC2C,oBADD;;AA6I/B7C,EAAAA,iBAAiB,CAAC8C,WAAlB,GAAgC/C,OAAM,CAAC+C,WAAP,IAAsB/C,OAAM,CAACgD,IAA7D;AAEA,SAAO/C,iBAAP;AACD","sourcesContent":["import { PureComponent, createContext, createElement } from \"react\";\n\nconst contexts = {};\n\nexport function stateful(render) {\n  class StatefulComponent extends PureComponent {\n    didMountHandlers = [];\n\n    useHook = type => {\n      const { hookContext } = this;\n      const { index, hooks } = hookContext;\n      // create new hook if not any\n      const hook =\n        hooks[index] ||\n        (hooks[index] = {\n          type,\n          index: hooks.length\n        });\n      if (type !== hook.type) {\n        throw new Error(\"Invalid hook usage\");\n      }\n      hookContext.index++;\n      return hook;\n    };\n\n    memoize = (hook, factory, inputs = []) => {\n      if (\n        !hook.inputs ||\n        hook.inputs.some((input, index) => input !== inputs[index])\n      ) {\n        hook.value = factory(...inputs);\n        hook.inputs = inputs;\n      }\n      return hook.value;\n    };\n\n    hookContext = {\n      hooks: [],\n      index: 0,\n\n      reducer: (reducer, initialState, onChange) => {\n        const [state, setState] = this.hookContext.state(\n          initialState,\n          onChange\n        );\n\n        function dispatch(...args) {\n          setState(reducer(state, ...args));\n        }\n\n        return [state, dispatch];\n      },\n\n      ref: () => {\n        const hook = this.useHook(\"ref\");\n        if (!hook.setter) {\n          hook.setter = value => (hook.setter.current = value);\n        }\n        return hook.setter;\n      },\n\n      state: (defaultValue, onChange) => {\n        const hook = this.useHook(\"state\");\n        if (!hook.setter) {\n          hook.value = defaultValue;\n          hook.setter = nextValue => {\n            if (nextValue === hook.value) return;\n            hook.value = nextValue;\n            onChange && onChange(hook.value);\n            // perform forceUpdate instead of setState({}) because it works faster\n            this.forceUpdate();\n          };\n        }\n\n        return [hook.value, hook.setter];\n      },\n\n      use: (hook, ...args) => hook(this.hookContext, ...args),\n\n      effect: (factory, inputs) => {\n        const hook = this.useHook(\"effect\");\n        return this.memoize(\n          hook,\n          (...args) =>\n            this.onMount(() => {\n              hook.dispose && hook.dispose();\n              hook.dispose = factory(...args);\n            }),\n          inputs\n        );\n      },\n\n      memo: (factory, inputs) => {\n        const hook = this.useHook(\"memo\");\n        return this.memoize(hook, factory, inputs);\n      },\n\n      context: (...args) => {\n        let contextName = \"default\";\n        if (typeof args[0] === \"string\") {\n          contextName = args.shift();\n        }\n        const context =\n          contexts[contextName] || (contexts[contextName] = createContext());\n\n        // is consumer\n        if (typeof args[0] === \"function\") {\n          return createElement(context.Consumer, {}, args[0]);\n        }\n        return createElement(context.Provider, {\n          value: args[0],\n          children: args[1]\n        });\n      }\n    };\n\n    onMount = handler => {\n      if (this.mount) {\n        handler();\n      } else {\n        this.didMountHandlers.push(handler);\n      }\n    };\n\n    componentDidMount() {\n      this.mount = true;\n      this.didMountHandlers.forEach(handler => handler());\n      this.didMountHandlers.length = 0;\n    }\n\n    componentWillUnmount() {\n      this.mount = false;\n      this.hookContext.hooks.forEach(hook => {\n        hook.type === \"effect\" && hook.dispose && hook.dispose();\n      });\n    }\n\n    render() {\n      const { props, hookContext } = this;\n      // reset hook index\n      hookContext.index = 0;\n      return render(props, hookContext);\n    }\n  }\n\n  StatefulComponent.displayName = render.displayName || render.name;\n\n  return StatefulComponent;\n}\n"],"file":"index.js"}